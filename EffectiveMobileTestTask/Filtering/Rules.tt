<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".g.cs" #>
<#
string[] operatorNames = { "And", "Or", "Xor" };
string[] operators = { "&&", "||", "^" };
#>
#nullable enable

using EffectiveMobileTestTask.Logging;

namespace EffectiveMobileTestTask.Filtering;

<# for (int i = 0; i < operators.Length; i++) { #>
	
public class <#= operatorNames[i] #>Rule<T> : BinaryRule<T>
{
    public <#= operatorNames[i] #>Rule(Predicate<T> left, Predicate<T> right) : base(left, right)
    {
    }

    public <#= operatorNames[i] #>Rule(Predicate<T> left, IRule<T> right) : base(left, right)
    {
    }

    public <#= operatorNames[i] #>Rule(IRule<T> left, Predicate<T> right) : base(left, right)
    {
    }

    public <#= operatorNames[i] #>Rule(IRule<T> left, IRule<T> right) : base(left, right)
    {
    }

    public override bool Should(T value)
    {
        return _left.Should(value) <#= operators[i] #> _right.Should(value);
    }
}

<# } #>